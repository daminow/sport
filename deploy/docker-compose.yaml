# docker-compose.yaml
name: sport

services:
  nginx:
    image: nginx:1.27
    restart: unless-stopped
    depends_on:
      - adminpanel
    ports:
      - "80:80"
    volumes:
      - "./nginx-conf/dev.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./nginx-logs:/var/log/nginx"
      - django-static:/static:ro
      - uploaded_media:/media:ro

  adminpanel:
    build: ../adminpage
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DEBUG: "false"
      PREFIX: "" # базовый URL-префикс (по умолчанию корень)
    volumes:
      - "../adminpage:/code"
      - "django-auth-preserve:/opt/pysetup/.venv/lib/python3.12/site-packages/django/contrib/auth/migrations/"
      - "django-static:/static"
      - "uploaded_media:/media"

  db:
    image: postgres:17.1-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      start_interval: 1s
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  db-data:
  django-static:
  django-auth-preserve:
  uploaded_media:
